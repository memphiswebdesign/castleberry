// Main Styles

// See the other SASS partials for typography, variables etc.
// CSS Grid is used for the layout with fallbacks for less capable browsers
// declared beforehand, and a @supports feature query to reset fallbacks when
// necessary. https://rachelandrew.co.uk/css/cheatsheets/grid-fallbacks

// the body element is our primary layout grid
body {
  height: 100vh;
  display: grid;
  grid-template-rows: auto 1fr auto;
  grid-template-columns:
    [full-start] minmax(1rem, 1fr)
    [main-start] minmax(0, 52rem) [main-end]
    minmax(1rem, 1fr) [full-end];

  &.lock {overflow: hidden;}
}

// by default, make any new children of body to span the full track
body > * {
  grid-column: full;
}

// header, the first grid row
// it is also a grid for the logo and nav
header {
  display: block;
  position: relative;
  top: 0;
  left: 0;
  right: 0;
  width: 100%;
  background-color: #fff;
  text-align: center;
  border-bottom: 1px solid #eee;
  z-index: 100;

  @media (min-width: 768px) {
    position: fixed;
  }

  &.scroll { }

  .container {padding: 0;}
}

// main menu, is a grid item
header nav {
  @media screen and (min-width: $screen-sm) { }
  ul {
    // flexbox is better than grid for distributing an unknown qty of children
    display: flex;
    align-items: center;
    justify-content: space-around;
    @media (max-width: 767px) {
      justify-content: space-between;
      padding: 0 15px;
    }

    li {
      margin-right: 2rem;
      display: inline-block;
      @media screen and (min-width: $screen-sm) {
        margin-right: 0;
      }
      a,
      a:visited {
        text-transform: uppercase;
        font-size: 15px;
        font-weight: 600;
        color: #444;
        text-decoration: none;
        letter-spacing: 0.08em;
        border: 0;
        border-radius: 6px;
        transition: 0.2s ease-out;

        @media screen and (min-width: $screen-sm) {
          padding: 0.9rem 1rem;
        }
        &[data-current="current page"] {
          // you can add an active nav item style here
        }
      }
      a:hover {
        background-color: #eee;
      }

      &.logo {
        max-height: 70px;
        @media (max-width: 767px) {width: 106px;}
        .wrap {
          background-color: #fff;
          padding: 10px;
          @media (max-width: 767px) {padding: 6px;}
        }
        a {padding: 0;}
      }
      &.mobile-toggle {
        display: none;
        @media (max-width: 767px) {display: inline-block;}
      }
      @media (max-width: 767px) {
        &.dl {display: none;}
      }
    }
  }
}

// our main content wrapper, the width scales with font size
main {
  width: 100%;
  max-width: 52rem;
  margin-right: auto;
  margin-left: auto;
  grid-column: main;
  display: grid;
  padding-top: 10rem;
  padding-bottom: 10rem;
  @media screen and (min-width: $screen-md) {
    align-content: start;
  }
}

// reset breaking fallbacks (e.g. widths) if CSS Grid is supported
// float, inline-block, table properties are already ignored by CSS Grid
@supports (display: grid) {
  main {
    width: auto;
    max-width: none;
  }
}

// blog posts list
html[data-current="blog"] main > section {
  ul li {
    padding: 2rem 0;
    border-bottom: 0.05em solid $hairline-color;
    p {
      padding-bottom: 0;
    }
  }
}

// adjacent blog posts links
nav[aria-label="Adjacent Posts"] {
  padding: 4rem 0;
  ul {
    display: flex;
    li {
      flex: 0 0 50%;
      width: auto;
      &:nth-child(2) {
        text-align: right;
      }
    }
  }
}

// contact form
html[data-current="contact"] main > form {
  display: grid;
  label {
    display: none;
  } 
  input,
  textarea {
    width: 100%;
    padding: 1rem;
    margin-bottom: 2rem;
  }
  button {
    width: 100%;
  }
}

// reset CSS Grid fallbacks when they aren't required
@supports (display: grid) {
  html[data-current="contact"] main > form {
    input,
    textarea,
    button {
      width: auto;
      max-width: none;
    }
  }
}

footer {
  background-color: $brand-grey;
  text-align: center;
  @media (min-width: $screen-sm) {}

  ul {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-around;
    margin: 0 0 1em 0;

    a {
      padding: 2em;
      font-size: 15px;
      color: #333;
    }

    svg {
      display: inline-block;
      width: 45px;
    }
  }
  p {
    font-size: 13px;
    margin: 0;
  }
}

#mobile-drawer {
  display: block;
  width: 100%;
  height: 100%;
  height: 100vh;
  max-width: 375px;
  padding: 30px;
  text-align: center;
  border: 1px solid #eee;
  position: fixed;
  top: 70px;
  right: 0;
  background: #fff;
  z-index: 999;
  transition: 0.2s ease-out;
  transform: translateX(101%);

  &.open {
    transform: translateX(0%);
    box-shadow: -12px 12px 55px rgba(32,32,32,0.1);
  }
}

ul.large-links {
  li {margin: 0 0 1.5rem 0;}
  a {
    font-size: 20px;
    font-weight: bold;
    color: #333;
  }
  hr {
    display: block;
    margin: 30px;
  }
}